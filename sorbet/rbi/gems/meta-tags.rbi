# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/meta-tags/all/meta-tags.rbi
#
# meta-tags-2.13.0

module MetaTags
  def self.config; end
  def self.configure; end
end
class MetaTags::Configuration
  def default_property_tags; end
  def description_limit; end
  def description_limit=(arg0); end
  def initialize; end
  def keywords_limit; end
  def keywords_limit=(arg0); end
  def keywords_lowercase; end
  def keywords_lowercase=(arg0); end
  def keywords_separator; end
  def keywords_separator=(arg0); end
  def minify_output; end
  def minify_output=(arg0); end
  def open_meta_tags; end
  def open_meta_tags=(arg0); end
  def open_meta_tags?; end
  def property_tags; end
  def reset_defaults!; end
  def title_limit; end
  def title_limit=(arg0); end
  def truncate_site_title_first; end
  def truncate_site_title_first=(arg0); end
end
module MetaTags::ControllerHelper
  def meta_tags; end
  def render(*args, &block); end
  def set_meta_tags(meta_tags); end
end
class MetaTags::MetaTagsCollection
  def [](name); end
  def []=(name, value); end
  def apply_robots_value(result, name, value, processed); end
  def calculate_robots_attributes(result, attributes); end
  def delete(*names); end
  def extract(name); end
  def extract_full_title; end
  def extract_robots; end
  def extract_robots_attribute(name); end
  def extract_separator; end
  def extract_separator_section(name, default); end
  def extract_title; end
  def full_title(defaults = nil); end
  def initialize; end
  def meta_tags; end
  def normalize_open_graph(meta_tags); end
  def page_title(defaults = nil); end
  def update(object = nil); end
  def with_defaults(defaults = nil); end
end
class MetaTags::Renderer
  def configured_name_key(name); end
  def initialize(meta_tags); end
  def meta_tags; end
  def normalized_meta_tags; end
  def process_array(tags, property, content, **opts); end
  def process_hash(tags, property, content, **opts); end
  def process_tree(tags, property, content, **opts); end
  def render(view); end
  def render_alternate(tags); end
  def render_charset(tags); end
  def render_custom(tags); end
  def render_hash(tags, key, **opts); end
  def render_hashes(tags, **opts); end
  def render_icon(tags); end
  def render_links(tags); end
  def render_noindex(tags); end
  def render_open_search(tags); end
  def render_refresh(tags); end
  def render_tag(tags, name, value, name_key: nil, value_key: nil); end
  def render_title(tags); end
  def render_with_normalization(tags, name); end
end
class MetaTags::Tag
  def attributes; end
  def initialize(name, attributes = nil); end
  def name; end
  def prepare_attributes(attributes); end
  def render(view); end
end
class MetaTags::ContentTag < MetaTags::Tag
  def render(view); end
end
module MetaTags::TextNormalizer
  def calculate_limit_left(limit, length, result, separator); end
  def calculate_title_limits(site_title, title, separator); end
  def cleanup_string(string, strip: nil); end
  def cleanup_strings(strings, strip: nil); end
  def helpers; end
  def normalize_description(description); end
  def normalize_keywords(keywords); end
  def normalize_title(site_title, title, separator, reverse = nil); end
  def safe_join(array, sep = nil); end
  def strip_tags(string); end
  def truncate(string, limit = nil, natural_separator = nil); end
  def truncate_array(string_array, limit = nil, separator = nil, natural_separator = nil); end
  def truncate_title(site_title, title, separator); end
  extend MetaTags::TextNormalizer
end
module MetaTags::ViewHelper
  def description(description); end
  def display_meta_tags(defaults = nil); end
  def display_title(defaults = nil); end
  def keywords(keywords); end
  def meta_tags; end
  def nofollow(nofollow = nil); end
  def noindex(noindex = nil); end
  def refresh(refresh); end
  def set_meta_tags(meta_tags = nil); end
  def title(title = nil, headline = nil); end
end
class MetaTags::Railtie < Rails::Railtie
end
